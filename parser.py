from get import getSchedule
import json
import re


def findGroupSchedule(table, group: str) -> dict or None:
    result = {}

    findGroupFlag = False # –Ω–∞–π–¥–µ–Ω–∞ –≥—Ä—É–ø–ø–∞ –∏–ª–∏ –Ω–µ—Ç

    table_rows = table.findAll('tr')
    i = 0

    while i < len(table_rows):
        date = re.search(r"\d{1,2}\.\d{1,2}\.\d{2,4}", table_rows[i].prettify())  # –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –¥–∞—Ç—ã

        if date is not None:
            result['date'] = date[0]

            # –ø–æ—Å–ª–µ —Å—Ç—Ä–æ–∫–∏ —Å –¥–∞—Ç–æ–π –∏–¥—ë—Ç —Å—Ç—Ä–æ–∫–∞ —Å –Ω–æ–º–µ—Ä–∞–º–∏ –≥—Ä—É–ø–ø
            # i —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Å—Ç—Ä–æ–∫—É —Å –Ω–æ–º–µ—Ä–∞–º–∏ –≥—Ä—É–ø–ø
            i += 1
            groups = re.findall(r"<strong>\s*(\d+)", table_rows[i].prettify());

            if group in groups:
                findGroupFlag = True

                # –Ω–æ–º–µ—Ä –∫–æ–ª–Ω–∫–∏ —Å –ø–∞—Ä–∞–º–∏ –≥—Ä—É–ø–ø—ã
                column = groups.index(group)
                # –ø–æ—Å–ª–µ —Å—Ç—Ä–æ–∫–∏ —Å –Ω–æ–º–µ—Ä–∞–º–∏ –≥—Ä—É–ø–ø –∏–¥–µ—Å —Å—Ç—Ä–æ–∫–∞ —Å –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã–º —à–ª–∞–∫–æ–º
                i += 2

                while (i < len(table_rows)) and (re.search(r'\d{1,2}\.\d{1,2}\.\d{2,4}', table_rows[i].prettify()) is None):
                    table_data = table_rows[i].findAll('td')
                    number_raw = table_data[0::3]
                    couple_raw = table_data[1::3]
                    cabinet_raw = table_data[2::3]

                    number = re.search(r'<strong>(\d+)', str(number_raw[column]))[1]
                    couple = re.search(r'<p>(.+)</p>', str(couple_raw[column]))[1]
                    cabinet = re.search(r'<p>(.+)</p>', str(cabinet_raw[column]))[1]

                    #TODO: –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–∞—Ä—ã –Ω–∞ –ø–æ–¥–≥—Ä—É–ø–ø—ã 
                    # üí© <- —Ç—É—Ç –Ω–∞—Å—Ä–∞–Ω–Ω–æ

                    couple_m = re.search(r'(.+\))(.+)', couple);  # –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –µ—Å–ª–∏ –ø–∞—Ä–∞ —Ä–∞–∑–¥–µ–ª–µ–Ω–∞ –Ω–∞ –ø–æ–¥–≥—Ä—É–ø–ø—ã
                    if couple_m is not None:
                        couple_name = couple_m[1]  
                        couple_teacher = couple_m[2]  
                        result[number] = {'para': couple_name, 'teacher': couple_teacher, 'kabinet': cabinet}

                    i += 1
                break
        i += 1
    return result if findGroupFlag else None


if __name__ == '__main__':
    couples = findGroupSchedule(getSchedule(), '44')
    couplesJson = json.dumps(couples, ensure_ascii=False)
    print(couples)
    print(couplesJson)
